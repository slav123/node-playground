var Imap = require('imap'),
    fs = require('fs'),
    inspect = require('util').inspect;


/*
* info@spasemiyahn.com.au
 Bx6eiVf5mS7p

* */

var imap = new Imap({
    user: '',
    password: '',
    host: 'c',
    port: 993,
    tls: true,
    tlsOptions: { rejectUnauthorized: false }
});


function uploadFile(err, files) {
    console.log('upload file', files);
    if (err) {
        console.err('error files', err);
    }
    for (a = 0; a < files.length; a++) {

        console.log('\nloading: ', files[a]);

        var data = fs.readFileSync('emails/' + files[a]);
        
        // folders visible via 'INBOX.name"

        imap.append(data, {'mailbox': 'INBOX', flags: ['Seen']}, function (err) {
            if (err) {
                console.error('error: ', err);
            } else {
                console.log('done: ', a);
            }
        });

        fs.unlinkSync('emails/' + files[a]);
    }


}

function openInbox(cb) {
    
    imap.openBox('INBOX', false, cb);

    imap.getBoxes('INBOX', function (err, list) {
        console.log('boxes list ', list);
    });


    //imap.addBox('INBOX/Alsco');
    
    console.log(cb);

    fs.readdir('emails', uploadFile);

}

imap.once('ready', function () {
    openInbox(function (err, box) {
        if (err) throw err;
        var f = imap.seq.fetch('*', {
            bodies: 'HEADER.FIELDS (FROM TO SUBJECT DATE)',
            struct: true
        });
        f.on('message', function (msg, seqno) {
            console.log('Message #%d', seqno);
            var prefix = '(#' + seqno + ') ';
            msg.on('body', function (stream, info) {
                var buffer = '';
                stream.on('data', function (chunk) {
                    buffer += chunk.toString('utf8');
                });
                stream.once('end', function () {
                    console.log(prefix + 'Parsed header: %s', inspect(Imap.parseHeader(buffer)));
                });
            });
            msg.once('attributes', function (attrs) {
                console.log(prefix + 'Attributes: %s', inspect(attrs, false, 8));
            });
            msg.once('end', function () {
                console.log(prefix + 'Finished');
            });
        });
        f.once('error', function (err) {
            console.log('Fetch error: ' + err);
        });
        f.once('end', function () {
            console.log('Done fetching all messages!');
            imap.end();
        });
    });
});

imap.once('error', function (err) {
    console.log(err);
});

imap.once('end', function () {
    console.log('Connection ended');
});

imap.connect();
